USE SCHEMA MY_PRODUCT_SCHEMA;

CREATE TABLE IF NOT EXISTS PRODUCTS (
    PRODUCT_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_NAME VARCHAR(255) NOT NULL,
    PRICE NUMBER(10,2) NOT NULL,
    CATEGORY VARCHAR(100),
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS PRODUCT_REVIEWS (
    REVIEW_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_ID NUMBER,
    REVIEW_TEXT TEXT,
    RATING NUMBER(1) CHECK (RATING >= 1 AND RATING <= 5),
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_INVENTORY (
    INVENTORY_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_ID NUMBER,
    QUANTITY NUMBER DEFAULT 0 CHECK (QUANTITY >= 0),
    LAST_UPDATED TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_CATEGORIES (
    CATEGORY_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    CATEGORY_NAME VARCHAR(100) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS PRODUCT_SUPPLIERS (
    SUPPLIER_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    SUPPLIER_NAME VARCHAR(255) NOT NULL,
    CONTACT_INFO VARCHAR(500),
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS PRODUCT_ORDERS (
    ORDER_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_ID NUMBER,
    ORDER_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    QUANTITY NUMBER CHECK (QUANTITY > 0),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_SHIPPING (
    SHIPPING_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    ORDER_ID NUMBER,
    SHIPPING_ADDRESS VARCHAR(500),
    SHIPPING_DATE TIMESTAMP_NTZ,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (ORDER_ID) REFERENCES PRODUCT_ORDERS(ORDER_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_DISCOUNTS (
    DISCOUNT_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_ID NUMBER,
    DISCOUNT_PERCENTAGE NUMBER(5,2) CHECK (DISCOUNT_PERCENTAGE >= 0 AND DISCOUNT_PERCENTAGE <= 100),
    START_DATE TIMESTAMP_NTZ,
    END_DATE TIMESTAMP_NTZ,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_TAGS (
    TAG_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    TAG_NAME VARCHAR(100) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS PRODUCT_TAG_MAPPING (
    PRODUCT_ID NUMBER,
    TAG_ID NUMBER,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    PRIMARY KEY (PRODUCT_ID, TAG_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    FOREIGN KEY (TAG_ID) REFERENCES PRODUCT_TAGS(TAG_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_IMAGES (
    IMAGE_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_ID NUMBER,
    IMAGE_URL VARCHAR(1000) NOT NULL,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_WISHLIST (
    WISHLIST_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    USER_ID NUMBER,
    PRODUCT_ID NUMBER,
    ADDED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_CART (
    CART_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1,
    USER_ID NUMBER,
    PRODUCT_ID NUMBER,
    QUANTITY NUMBER CHECK (QUANTITY > 0),
    ADDED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);